/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.baeldung.openapi.api;

import com.baeldung.openapi.model.CityDto;
import com.baeldung.openapi.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-02-22T10:47:36.926025600+05:30[Asia/Calcutta]")
@Validated
@Api(value = "cities", description = "the cities API")
public interface CitiesApi {

    default CitiesApiDelegate getDelegate() {
        return new CitiesApiDelegate() {};
    }

    /**
     * GET /cities : List all cities
     *
     * @return list of cities (status code 200)
     *         or unexpected error (status code 200)
     */

    @ApiOperation(value = "List all cities", nickname = "getAllCities", notes = "", response = CityDto.class, responseContainer = "List", tags={ "City", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "list of cities", response = CityDto.class, responseContainer = "List"),

        @ApiResponse(code = 200, message = "unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/cities",
        produces = { "application/json" }
    )
    default ResponseEntity<List<CityDto>> getAllCities() {
        return getDelegate().getAllCities();
    }

}
